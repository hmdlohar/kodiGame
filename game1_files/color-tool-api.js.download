function colorToolApply(currSvg,options={pathOnly:false}){
	// window.designSaved = false;
	var pathSelector="*";
	if(options.pathOnly){
		pathSelector="path";
	}
	var lockingBackground=0;
	var lockingBorder=0;
	var lockingPath=0;
	var pickingColor=false;
    var paths=currSvg.getElementsByTagName(pathSelector);
    var fills=currSvg.getElementsByClassName("bp-fill");;
    var fillslength=fills.length;
    for(i=0;i<fillslength;i++){
        fills[i].onmouseenter=onmo;
        fills[i].onclick=colorIt;
        fills[i].onmouseout=onout;
    }
    this.paths=paths;
    this.svgType=currSvg.getAttribute("data-type");
    /* Listner Functions */
    var pickMoFunction=function(){};
    var pickClickFunction=function(){};
    var onColorIt=function(){};
    /* Listner Functions */
    function addEventsToElement(element){
    	element.onmouseenter=onmo;
        element.onclick=colorIt;
        element.onmouseout=onout;
    }
    function commonOnMouse(){
    	if(window.hand==1 || window.freeDraw||window.resizable){
        	return false;
	    }
	    else{
	        return true;
	    }
    }
    function onmo(e){
    	if(lockingPath==1 || lockingPath==2){
    		this.setAttribute("opacity","0.5");
    		return;
    	}else if(pickingColor){
    		pickMoFunction(this.getAttribute("fill"));
    		return;
    	}

    	if(this.getAttribute("data-locked")=="1"){
    		return;
    	}
	    //window.colorBase=getFill(this);
	    window.colorBase=this.getAttribute("fill");
	    //this.style.fill="";
	    this.setAttribute("fill",window.colorNow);
	}
	function onout(e){
		if(lockingPath==1 || lockingPath==2 || pickingColor){
    		this.removeAttribute("opacity");
    		return;
    	}

    	if(this.getAttribute("data-locked")=="1"){
    		return;
    	}
	    //this.style.fill=window.colorBase;
	    //this.style.fill="";
	    this.setAttribute("fill",window.colorBase)
	}
	function colorIt(e){
		window.designSaved = false;
		if(pickingColor){
			pickClickFunction(this.getAttribute("fill"));
			return;
		}
		if(lockingPath==1){
			this.removeAttribute("opacity");
			this.setAttribute("data-locked","1");
			return;
		}
		else if(lockingPath==2){
			this.removeAttribute("opacity");
			this.setAttribute("data-locked","0");
			return;
		}


		if(lockingBackground > 0){
    		lockBackgroundElement(this);
			lockingBackground--;
			return;
    	}
    	else if(lockingBorder > 0){
    		lockBorderElement(this);
    		lockingBorder--;
    		return;
    	}
	    onColorIt(this,window.colorBase);
	    window.colorBase=window.colorNow;
	}
	this.getColorIt=function(){
		return onColorIt;
	}
	function lockBorderElement(element){
		element.style.pointerEvents="none";
		element.setAttribute("fill","#000000");
		element.setAttribute("class","bp-stroke");
		element.onmouseenter=null;
		element.onmouseout=null;
		element.onclick=null;
	}
	function lockBackgroundElement(element){
		element.style.pointerEvents="none";
		element.setAttribute("fill","none");
		element.setAttribute("class","bp-background");
		element.onmouseenter=null;
		element.onmouseout=null;
		element.onclick=null;
	}
	function getFill(e){
	    afill=e.style.fill;
	    if(afill==null||afill==""){
	        afill=e.getAttribute("fill");
	        if(afill==null||afill==""){
	            return "";
	        }
	    }
	    e.removeAttribute("fill");
	    e.style.fill=afill;
	    //console.log("sfill "+e.style.fill);
	    if(isHax(afill)){
	        afill=hexToRgbStr(afill);
	    }
	    //console.log("sfill "+isRgb(afill)+ "fill "+afill);
	    return afill;

	}
	function validPathName(tn){
	    if(tn=='circle'||tn=='ellipse'||tn=='image'||tn=='line'||tn=='mesh'||tn=='path'||tn=='polygon'||tn=='polyline'||tn=='g'||tn=='rect'||tn=='text'||tn=='use'){
	        return true;
	    }
	    return false;
	}
	function isHax(str){
	    str=str.toString();
	    if(str.indexOf("#")==0 && str.length==7){
	        return true;
	    }
	    return false;
	}
	function hexToRgbStr(hex) {
	    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
	    ob= result ? {
	        r: parseInt(result[1], 16),
	        g: parseInt(result[2], 16),
	        b: parseInt(result[3], 16)
	    } : null;

	    str="rgb("+ob.r+", "+ob.g+", "+ob.b+")";
	    return str;
	}
	function rgbToHexStr(str) {
	    r=parseInt( str.replace("rgb(","").replace(")","").split(",")[0]);
	    g=parseInt( str.replace("rgb(","").replace(")","").split(",")[1]);
	    b=parseInt( str.replace("rgb(","").replace(")","").split(",")[2]);
	    return "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);
	}
	colorToolApply.prototype.lockBackgroundElement=lockBackgroundElement;
	colorToolApply.prototype.reconfig=function(){
		var paths=currSvg.getElementsByTagName(pathSelector);
    	for(i=0;i<paths.length;i++){
	        if(validPathName(paths[i].tagName)){
	            paths[i].onmouseenter=onmo;
	            paths[i].onclick=colorIt;
	            paths[i].onmouseout=onout;
	        }
    	}
    }
    colorToolApply.prototype.strokes=function(){
    	return currSvg.getElementsByClassName("bp-stroke");
    }
    colorToolApply.prototype.setOnColorIt=function(func){
    	onColorIt=func;
    }
    colorToolApply.prototype.pickColor=function(bool,moFunction,clickFunction){
    	if(moFunction &&clickFunction){
    		pickingColor=bool;
    		pickMoFunction=moFunction;
    		pickClickFunction=clickFunction;
    	}else{
    		pickingColor=false;
    	}
    }
    colorToolApply.prototype.lockPath=function(num){
    	lockingPath=num;
    }
    colorToolApply.prototype.backgrounds=function(){
    	return currSvg.getElementsByClassName("bp-background");
    }
    colorToolApply.prototype.fills=function(){
    	return currSvg.getElementsByClassName("bp-fill");
    }
	colorToolApply.prototype.borderColor=function(){
		if(this.svgType=="2"){
			return this.paths[2].getAttribute("stroke");
		}
    	var st=this.strokes();
    	if(st.length>0){
    		return st[0].getAttribute("fill");
    	}
    	return "#000000";
    }
    colorToolApply.prototype.changeBorderColor=function(color){
    	var svgCount=mainSvg.getElementsByTagName("svg");
    	var currSvg2=null;
    	if(svgCount.length >=1){
    		currSvg2=svgCount[0];
    	}
    	window.cs=currSvg2;
    	var displayBorder=currSvg.getAttribute("data-border-hidden");
    	if(displayBorder=="1"){
    		return;
    	}
    	if(currSvg2){
			if(currSvg2.getAttribute("data-type")=="2"){
				var paths2=currSvg2.getElementsByClassName("bp-fill");
				for(var p of paths2){
					p.setAttribute("stroke",color);
				}
			}
			else{
				var st2=currSvg2.getElementsByClassName("bp-stroke");
	    		if(st2.length>0){
	    			st2[0].setAttribute("fill",color);
	    		}
			}

		}
    	if(this.svgType=="2"){
			for(p of paths){
				p.setAttribute("stroke",color);
			}

			return;
		}

    	var st=this.strokes();
    	if(st.length>0){
    		return st[0].setAttribute("fill",color);
    	}

    }
    colorToolApply.prototype.borderOnOff=function(){
    	var displayBorder=currSvg.getAttribute("data-border-hidden");
    	if(displayBorder=="" || !displayBorder){
    		currSvg.setAttribute("data-border-color",this.borderColor());
    		this.changeBorderColor("rgba(0,0,0,0)");
    		currSvg.setAttribute("data-border-hidden","1");
    	}
    	else{
    		currSvg.setAttribute("data-border-hidden","");
    		this.changeBorderColor(currSvg.getAttribute("data-border-color"));
    	}
			$("#bordervis").toggleClass('off');
    }
    colorToolApply.prototype.getPng=function(resolution,onDone){
    	var newSvg=currSvg.cloneNode(true);
    	var pngCanvas=document.createElement("canvas");
    	window.can=pngCanvas;
    	newSvg.setAttribute("height",resolution+"px");
    	newSvg.setAttribute("width",resolution+"px");
    	pngCanvas.setAttribute("height",resolution+"px");
    	pngCanvas.setAttribute("width",resolution+"px");
    	var svgString = new XMLSerializer().serializeToString(newSvg);
	    var ctx = pngCanvas.getContext("2d");
	    var DOMURL = self.URL || self.webkitURL || self;
	    var img = new Image();
	    var svg = new Blob([svgString], {type: "image/svg+xml;charset=utf-8"});
	    var url = DOMURL.createObjectURL(svg);
	    img.src = url;
	    img.onload=function(){
        	ctx.drawImage(img, 0, 0);
        	var png = pngCanvas.toDataURL("image/png");
        	DOMURL.revokeObjectURL(url);
        	onDone(png);

	    }
    }
    colorToolApply.prototype.removeWatermark=function(){
    	var allwm=currSvg.getElementsByClassName("bp-watermark");
    	for(wm of allwm){
    		wm.remove();
    	}
    }
    colorToolApply.prototype.addWatermark=function(){
    	var svg=`<svg xmlns="http://www.w3.org/2000/svg" version="1.0" width="500px" height="500px" viewBox="0 0 5000 5000" preserveAspectRatio="xMidYMid meet" data-type="path" class="bp-watermark" style="display:block;">
		 <path d="M1053 4401 c-59 -55 -215 -205 -346 -333 l-237 -233 0 -48 c0 -26 6 -60 14 -75 8 -15 97 -108 198 -208 208 -205 240 -226 355 -232 92 -5 131 8 197 69 69 63 96 117 96 193 0 56 1 58 23 52 12 -4 52 -10 88 -13 80 -7 134 14 203 77 125 115 129 281 11 437 -24 32 -119 136 -212 232 l-168 174 -57 5 -56 4 -109 -101z m275 -305 c115 -118 142 -157 142 -204 0 -46 -46 -92 -92 -92 -45 0 -64 14 -195 144 l-113 111 72 72 c40 40 75 73 79 73 3 0 51 -47 107 -104z m-320 -300 c100 -105 122 -148 102 -197 -42 -99 -132 -73 -269 80 l-75 83 66 64 c36 35 70 64 76 64 5 0 50 -42 100 -94z" style="fill: rgba(230, 230, 230,1);"/>
		 <path d="M2105 3880 c-11 -4 -169 -153 -352 -330 -357 -346 -363 -354 -343 -429 19 -70 107 -119 166 -92 35 16 34 17 34 -41 0 -145 153 -294 320 -313 122 -14 246 34 357 139 81 77 126 148 149 236 35 136 -3 266 -107 365 -63 60 -126 94 -175 95 -17 0 -34 3 -37 7 -4 3 31 45 77 93 47 47 88 98 91 113 13 48 -3 93 -45 131 -41 37 -87 46 -135 26z m-53 -540 c120 -34 164 -165 96 -280 -99 -164 -323 -156 -369 12 -28 104 58 231 181 269 35 10 50 10 92 -1z" style="fill: rgba(230, 230, 230,1);"/>
		 <path d="M2586 2989 c-50 -39 -56 -65 -71 -311 -8 -128 -17 -262 -21 -297 l-6 -63 -122 121 c-112 110 -126 121 -159 121 -26 0 -46 -9 -72 -31 -31 -28 -35 -36 -35 -81 l0 -50 197 -201 c109 -111 210 -210 225 -221 35 -23 90 -23 124 -1 51 33 61 79 78 360 9 143 16 275 16 294 0 33 2 32 124 -95 l123 -129 52 0 c47 0 56 4 82 33 22 24 29 42 29 73 0 39 -7 48 -179 227 -252 265 -261 272 -314 272 -30 0 -53 -7 -71 -21z" style="fill: rgba(230, 230, 230,1);"/>
		 <path d="M3125 2262 c-78 -27 -138 -66 -193 -127 -168 -184 -156 -453 30 -631 76 -73 134 -108 213 -128 157 -41 315 4 429 124 94 99 133 205 123 342 -12 183 -157 363 -338 419 -77 24 -196 25 -264 1z m240 -251 c43 -19 91 -68 107 -110 16 -42 11 -116 -11 -158 -81 -159 -293 -173 -374 -25 -33 61 -35 119 -6 179 52 108 182 161 284 114z" style="fill: rgba(230, 230, 230,1);"/>
		 <path d="M3845 1522 c-78 -27 -138 -66 -193 -127 -168 -184 -156 -453 30 -631 76 -73 134 -108 213 -128 157 -41 315 4 429 124 94 99 133 205 123 342 -12 183 -157 363 -338 419 -77 24 -196 25 -264 1z m240 -251 c43 -19 91 -68 107 -110 16 -42 11 -116 -11 -158 -81 -159 -293 -173 -374 -25 -33 61 -35 119 -6 179 52 108 182 161 284 114z" style="fill: rgba(230, 230, 230,1);"/>
		 </svg>`;
 		currSvg.innerHTML+=svg;
 		var sv=document.getElementsByClassName("bp-watermark")[0];
 		sv.setAttribute("opacity","0.7");
        sv.setAttribute("width",mainSvg.viewBox.baseVal.width);
        sv.setAttribute("height",mainSvg.viewBox.baseVal.height);

    }

    colorToolApply.prototype.remove=function(){
    	var paths=currSvg.getElementsByTagName(pathSelector);
    	for(i=0;i<paths.length;i++){
	        if(validPathName(paths[i].tagName)){
	            paths[i].onmouseenter=null;
	            paths[i].onclick=null;
	            paths[i].onmouseout=null;
	        }
    	}
    }
    colorToolApply.prototype.addWatermarkText=function(){
    	var allwm=currSvg.getElementsByClassName("bp-watermark");
    	if(allwm.length >=1 ){
    		return;
    	}
    	var g=this.paths[0];
    	var vb=currSvg.viewBox.baseVal;
    	var tempx= -300/500* vb.width ;
    	var tempy= 420/500* vb.height ;
    	var tempsize=200/500 * vb.height;
    	var tempText = document.createElementNS('http://www.w3.org/2000/svg',"text");
    	tempText.setAttribute("fill","rgba(225,225,225,0.5)");
    	tempText.setAttribute("x",tempx+"px");
    	tempText.setAttribute("y",tempy+"px");
    	tempText.setAttribute("transform","rotate(-45)");
    	tempText.setAttribute("font-size",tempsize+"px");
    	tempText.setAttribute("font-family","BGotham");
    	tempText.setAttribute("class","bp-watermark");
    	tempText.setAttribute("cursor","default");
    	tempText.innerHTML="Bpzoo";
    	g.appendChild(tempText);
    }
    colorToolApply.prototype.getPng2=function(resolution,onDone){
    	var newSvg=currSvg.cloneNode(true);
    	var pngCanvas=document.createElement("canvas");
    	newSvg.setAttribute("height",resolution+"px");
    	newSvg.setAttribute("width",resolution+"px");
    	pngCanvas.setAttribute("height",resolution+"px");
    	pngCanvas.setAttribute("width",resolution+"px");
    	var svgData = new XMLSerializer().serializeToString( newSvg );
		var ctx = pngCanvas.getContext( "2d" );
		ctx.font = "BGotham";
		var canvasdata = 'data:image/svg+xml;base64,'+ btoa( unescape( encodeURIComponent(svgData) ) );
		var img = new Image();
		img.src = canvasdata;
	    img.onload=function(){
        	ctx.drawImage(img, 0, 0);
        	pngCanvas.toBlob(function(a){
        		onDone(a);
        	})
	    }
    }
    colorToolApply.prototype.getPngBlob=function(resolution,onDone){
    	var newSvg=currSvg.cloneNode(true);
    	var pngCanvas=document.createElement("canvas");
    	window.can=pngCanvas;
    	newSvg.setAttribute("height",resolution+"px");
    	newSvg.setAttribute("width",resolution+"px");
    	pngCanvas.setAttribute("height",resolution+"px");
    	pngCanvas.setAttribute("width",resolution+"px");
    	var svgString = new XMLSerializer().serializeToString(newSvg);
	    var ctx = pngCanvas.getContext("2d");
	    var DOMURL = self.URL || self.webkitURL || self;
	    var img = new Image();
	    var svg = new Blob([svgString], {type: "image/svg+xml;charset=utf-8"});
	    var url = DOMURL.createObjectURL(svg);
	    img.src = url;
	    img.onload=function(){
        	ctx.drawImage(img, 0, 0);
        	DOMURL.revokeObjectURL(url);
        	pngCanvas.toBlob(function(a){
        		onDone(a);
        	})
	    }
    }




    /*  Specially for Admin Panel
    *
    *
    *
    *
    *
    this should be removed from public color tool */
	colorToolApply.prototype.setSvgType=function(type){
    	currSvg.setAttribute("data-type",type);
    	this.svgType=type;
    }
    colorToolApply.prototype.purifySvgType2=function(){
    	paths=currSvg.getElementsByTagName("*");
		currSvg.removeAttribute("id");
		currSvg.removeAttribute("class");
		currSvg.setAttribute("data-type","2");
		currSvg.setAttribute("preserveAspectRatio","xMidYMid meet");
		this.svgType="2";
		var pathToRemove=[];
		/* removeing G* /
		var g=currSvg.getElementsByTagName("g");
		var glen=g.length;
		for(i=0;i<glen;i++){
			currSvg.innerHTML+=g[0].innerHTML;
			g[0].remove();
		}
		*/

		for(p of paths){
			if(!validPathName(p.tagName)){
				console.log(p.tagName);
				//p.remove();
				pathToRemove.push(p);
				continue;
			}
			var strokeWidth=strokeWidth=getComputedStyle(p).strokeWidth;;
			var fill=rgbToHexStr(getComputedStyle(p).fill);
			var cls="bp-fill";
			if(p.style.fill==="rgba(255, 255, 255, 0)"){
				fill="none";
				cls="bp-background";
			}
			else if(p.style.fill==="rgb(0, 0, 0)"){
				fill="#000000"
				p.setAttribute("pointer-events","none");
				cls="bp-stroke";
			}
			else{
				fill="#FFFFFF";
			}
			if(p.tagName=="g"){
				cls="bp-g";
			}
			console.log(getFill(p));
			p.removeAttribute("onmouseover");
	        p.removeAttribute("onmousemove");
	        p.removeAttribute("onmouseout");
	        p.removeAttribute("onclick");
	        p.removeAttribute("id");
	        p.removeAttribute("style");
	        p.setAttribute("fill",fill);
	        p.setAttribute("stroke","#000000");
	        p.setAttribute("stroke-miterlimit","10");
	        if(strokeWidth!="" || !strokeWidth){
	        	p.setAttribute("stroke-width",strokeWidth);
	        }
	        p.setAttribute("class",cls);

	    }
	    for(pr of pathToRemove){
	    	pr.remove();
	    }
		this.addG2(currSvg);
    }

    colorToolApply.prototype.addG2=function(svgElement){
    	var tempG = document.createElementNS('http://www.w3.org/2000/svg',"g");
		tempG.setAttribute("class","bp-all");
		tempG.innerHTML=svgElement.innerHTML;
		svgElement.innerHTML="";
		svgElement.appendChild(tempG);
    }
    colorToolApply.prototype.lockBackground=function(count){
    	lockingBackground=count;
    }

    colorToolApply.prototype.lockBorder=function(count){
    	lockingBorder=count;
    }
    colorToolApply.prototype.resetBackground=function(){
    	var backPaths=currSvg.getElementsByClassName("bp-background");
    	for(bp of backPaths){
    		bp.setAttribute("fill","#FFFFFF");
    		bp.setAttribute("class","bp-fill");
    		bp.style.pointerEvents="auto";
    		addEventsToElement(bp);
    	}
    }
    colorToolApply.prototype.resetBorder=function(){
    	var borderPaths=currSvg.getElementsByClassName("bp-stroke");
    	for(bp of borderPaths){
    		bp.setAttribute("class","bp-fill");
    		bp.style.pointerEvents="auto";
    		addEventsToElement(bp);
    	}
    }

}

function getPngFromSvg(currSvg,resolution,onDone){
	var newSvg=currSvg.cloneNode(true);
	var pngCanvas=document.createElement("canvas");
	window.can=pngCanvas;
	newSvg.setAttribute("height",resolution+"px");
	newSvg.setAttribute("width",resolution+"px");
	pngCanvas.setAttribute("height",resolution+"px");
	pngCanvas.setAttribute("width",resolution+"px");
	var svgString = new XMLSerializer().serializeToString(newSvg);
    var ctx = pngCanvas.getContext("2d");
    var DOMURL = self.URL || self.webkitURL || self;
    var img = new Image();
    var svg = new Blob([svgString], {type: "image/svg+xml;charset=utf-8"});
    var url = DOMURL.createObjectURL(svg);
    img.src = url;
    img.onload=function(){
    	ctx.drawImage(img, 0, 0);
    	var png = pngCanvas.toDataURL("image/png");
    	DOMURL.revokeObjectURL(url);
    	onDone(png);
    }
}

function triggerDownload (imgURI,name) {
    var evt = new MouseEvent('click', {
        view: window,
        bubbles: false,
        cancelable: true
    });

    var a = document.createElement('a');
    a.setAttribute('download', name+'.png');
    a.setAttribute('href', imgURI);
    a.setAttribute('target', '_blank');
    a.dispatchEvent(evt);
}
window.colorNow="#0000FF";
